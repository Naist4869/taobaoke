apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis
  namespace: redis
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: redis
subjects:
  - kind: ServiceAccount
    name: redis
    namespace: redis
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: redis
spec:
  serviceName: redis-service
  replicas: 6
  selector:
    matchLabels:
      app: redis
      appCluster: redis-cluster
  template:
    metadata:
      labels:
        app: redis
        appCluster: redis-cluster
    spec:
#      affinity:
#        podAntiAffinity:  # 添加 Pod 反亲和性，将副本打散在不同的节点  cluster最少需要6个节点  我没有
#          preferredDuringSchedulingIgnoredDuringExecution:  # 软策略
#            - weight: 100
#              podAffinityTerm:
#                labelSelector:
#                  matchExpressions:
#                    - key: app
#                      operator: In
#                      values:
#                        - redis
#                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 20
      serviceAccountName: redis
      containers:
        - name: redis
          image: redis:latest
          command:
            - redis-server
          args:
            - "/etc/redis/redis.conf"
            - "--protected-mode"
            - "no"
          ports:
            - protocol: "TCP"
              name:  redis
              containerPort: 6379
            - name: cluster
              containerPort: 16379
              protocol: "TCP"
          volumeMounts:
            - name:  redis-conf
              mountPath: /etc/redis
            - name: redis-data
              mountPath: /var/lib/redis
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 9121
      volumes:
        - name:  redis-conf
          configMap:
              name:  redis-conf
              items:
                - key: redis.conf
                  path: redis.conf
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: openebs-hostpath  # 提供一个可用的 Storageclass
        resources:
          requests:
            storage: 10Gi