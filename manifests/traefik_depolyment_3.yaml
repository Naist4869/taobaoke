apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: traefik-ingress-controller

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: traefik
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.2
          args:
            - --api.insecure
            - --accesslog
            - --entrypoints.web.Address=:8000
            - --entrypoints.websecure.Address=:4443
            - --entrypoints.mongo.Address=:27017
            - --providers.kubernetescrd
            - --certificatesresolvers.myresolver.acme.dnsChallenge.provider=alidns
            - --certificatesresolvers.myresolver.acme.email=457555225@qq.com
            - --certificatesresolvers.myresolver.acme.storage=acme.json  # 你可以挂载到pv 如果pod重启了他会再次去申请证书  但是letsencrypt次数有限制
            # Please note that this is the staging Let's Encrypt server.
            # Once you get things working, you should remove that whole line altogether.
            - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          envFrom:
            - secretRef:
## kubectl create secret generic traefik-alidns-secret --from-literal=ALICLOUD_ACCESS_KEY={key} --from-literal=ALICLOUD_SECRET_KEY={secret} --from-literal=ALICLOUD_REGION_ID=cn-beijing
                name: traefik-alidns-secret
          ports:
            - name: web
              containerPort: 8000
            - name: websecure
              containerPort: 4443
            - name: admin
              containerPort: 8080
              hostPort: 8081
            - name: mongo
              containerPort: 27017
              hostPort: 27017
          resources:
            requests:
              cpu: "50m"
              memory: "50Mi"
            limits:
              cpu: "200m"
              memory: "100Mi"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: whoami
  labels:
    app: whoami

spec:
  replicas: 2
  selector:
    matchLabels:
      app: whoami
  template:
    metadata:
      labels:
        app: whoami
    spec:
      containers:
        - name: whoami
          image: containous/whoami
          ports:
            - name: web
              containerPort: 80
